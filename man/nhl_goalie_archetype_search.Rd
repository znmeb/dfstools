% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nhl_analytics.R
\name{nhl_goalie_archetype_search}
\alias{nhl_goalie_archetype_search}
\title{NHL Goalie Archetype Search}
\usage{
nhl_goalie_archetype_search(
  goalie_totals,
  num_steps = 1:7,
  nrep = 32,
  verbose = TRUE
)
}
\arguments{
\item{goalie_totals}{a tibble returned by \code{nhl_player_season_totals}}

\item{num_steps}{number of steps to use (default 1:7)}

\item{nrep}{number of repetitions at each step (default 32)}

\item{verbose}{should the search be verbose? (default TRUE)}
}
\value{
a list of
\itemize{
\item archetype_parameters the parameters that define each archetype
\item player_alphas the players tagged with their loadings on each archetype
\item archetype_model the model object - the \code{bestModel} with \code{num_steps}
archetypes
\item all of the models}
}
\description{
stepwise search of archetype counts
}
\examples{
\dontrun{
dfstools::msf_set_apikey("your MySportsFeeds API key")
player_totals <- dfstools::nhl_player_season_totals("2018-2019-regular")
goalie_totals <- player_totals$goalie_totals
skater_totals <- player_totals$skater_totals
goalie_archetypes <- dfstools::nhl_goalie_archetype_search(goalie_totals)
screeplot(goalie_archetypes$archetype_models)
goalie_alphas <- goalie_archetypes[["player_alphas"]]
View(goalie_alphas)
}
}
